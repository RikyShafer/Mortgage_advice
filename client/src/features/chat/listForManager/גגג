import React from 'react';
import { Box, Typography, List, ListItem, ListItemText, IconButton, Avatar } from '@mui/material';
import { formatDistanceToNow } from 'date-fns';
import { he } from 'date-fns/locale';
import { useViewInChatToADMINQuery } from '../ChatApiSlice';
import DeletingMessage from '../DeletingMessage/DeletingMessage';
import ContinueChatting from '../ContinueChatting/ContinueChatting';

const ChatConversation = ({ chatId, firstName, users }) => {
    const { data: chat } = useViewInChatToADMINQuery();
    const selectedChat = chat?.data.find(c => c._id === chatId);

    if (!selectedChat) {
        return <Typography>לא נמצאה שיחה.</Typography>;
    }

    const formatTimestamp = (timestamp) => {
        const messageDate = new Date(timestamp);
        const distanceInWords = formatDistanceToNow(messageDate, { addSuffix: true, locale: he });

        return distanceInWords;
    };

    const receiver = users?.data.find(user => user._id === selectedChat.user2);

    return (
        <Box display="flex" flexDirection="column" height="100%" bgcolor="#e5ddd5">
            <Box display="flex" alignItems="center" p={2} bgcolor="#e5ddd5" color="#fff">
                <Avatar sx={{ bgcolor: "#e5ddd5", mr: 2 }}>{receiver ? receiver.firstName.charAt(0) : "?"}</Avatar>
                <Typography variant="h6">
                    {receiver ? `${receiver.firstName} ${receiver.lastName}` : "Unknown"}
                </Typography>
            </Box>
            <Box flexGrow={1} overflow="auto" p={2} sx={{ background: '#efeae2' }}>
                <List>
                    {selectedChat.messages.map((m, index) => (
                        <ListItem key={index} sx={{ display: 'flex', flexDirection: m.sender === selectedChat.user2 ? 'row' : 'row-reverse', mb: 1 }}>
                            <Box maxWidth="75%" p={1} borderRadius={2} sx={{ background: m.sender === selectedChat.user2 ? '#dcf8c6' : '#ffffff', boxShadow: 1 }}>
                                <ListItemText
                                    primary={m.text}
                                    secondary={formatTimestamp(m.timestamp)}
                                    primaryTypographyProps={{ style: { wordBreak: 'break-word' } }}
                                    secondaryTypographyProps={{ style: { textAlign: m.sender === selectedChat.user2 ? 'left' : 'right', color: '#999', fontSize: '0.75rem' } }}
                                />
                            </Box>
                            {m.sender === selectedChat.user1 && (
                                <IconButton size="small">
                                    <DeletingMessage conversationId={selectedChat._id} messageId={m._id} />
                                </IconButton>
                            )}
                        </ListItem>
                    ))}
                </List>
            </Box>
            <Box p={2} sx={{ background: '#ffffff', borderTop: '1px solid #ddd' }}>
                <ContinueChatting conversationId={selectedChat._id} className={"Manager"} onMessageSent={() => console.log('Message sent!')} />
            </Box>
        </Box>
    );
};

export default ChatConversation;
